From 32880a918b832536edb1eff356e829c7927d5682 Mon Sep 17 00:00:00 2001
From: Jason Madden <jamadden@gmail.com>
Date: Wed, 4 Sep 2024 12:20:45 -0500
Subject: [PATCH 6/8] Update test_greenlet_trash.py to avoid redefining
 variables

---
 src/greenlet/tests/test_greenlet_trash.py | 16 +++++++---------
 1 file changed, 7 insertions(+), 9 deletions(-)

diff --git a/src/greenlet/tests/test_greenlet_trash.py b/src/greenlet/tests/test_greenlet_trash.py
index 2bce8fd..a3f58b7 100644
--- a/src/greenlet/tests/test_greenlet_trash.py
+++ b/src/greenlet/tests/test_greenlet_trash.py
@@ -29,18 +29,17 @@ from __future__ import print_function, absolute_import, division
 
 import unittest
 
-try:
-    from greenlet._greenlet import get_tstate_trash_delete_nesting
-except ImportError:
-    get_tstate_trash_delete_nesting = None
-
 
 class TestTrashCanReEnter(unittest.TestCase):
 
-    # Python 3.13 has not "trash delete nesting" anymore (but "delete later")
-    @unittest.skipIf(get_tstate_trash_delete_nesting is None,
-                     'need get_tstate_trash_delete_nesting()')
     def test_it(self):
+        try:
+            from greenlet._greenlet import get_tstate_trash_delete_nesting
+        except ImportError:
+            import sys
+            # Python 3.13 has not "trash delete nesting" anymore (but "delete later")
+            assert sys.version_info[:2] >= (3, 13)
+            self.skipTest("get_tstate_trash_delete_nesting is not available.")
         # Try several times to trigger it, because it isn't 100%
         # reliable.
         for _ in range(10):
@@ -48,7 +47,6 @@ class TestTrashCanReEnter(unittest.TestCase):
 
     def check_it(self): # pylint:disable=too-many-statements
         import greenlet
-        from greenlet._greenlet import get_tstate_trash_delete_nesting # pylint:disable=no-name-in-module
 
         main = greenlet.getcurrent()
 
